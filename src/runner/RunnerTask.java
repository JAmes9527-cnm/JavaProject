/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package runner;

import vendor.*;
import CustomerMenu.Message;
import CustomerMenu.NonEditableTableModel;
import CustomerMenu.OrderFile;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author james
 */
public class RunnerTask extends javax.swing.JFrame {

    /**
     * Creates new form VendorOrder
     */
    
    
    public RunnerTask() {
        model = new NonEditableTableModel();
        initComponents();
        OrderTable();
    }
    
    private NonEditableTableModel model;
    public static List<Object> OrderList;
    public static int row = -1;
    
    
    public void OrderTable(){
        OrderList = Admin.Runner.getOrders(RunnerLogin.currentRunner);
        model = new NonEditableTableModel();
        model.addColumn("OrderID");
        model.addColumn("CustomerID");
        model.addColumn("Vendor Name");
        model.addColumn("Food Status");
        model.addColumn("Runner");
        model.addColumn("Delivery status");
        model.addColumn("Order Status");
        
        for (Object obj:OrderList){
            if(obj instanceof OrderFile){
                OrderFile order = (OrderFile) obj;
                model.addRow(new Object[]{order.getOrderID(),order.getCustomerID(),order.getVendorName(),order.getFoodStatus(),order.getDeliveryGuy(),order.getDelivery(),order.getFoodStatus()});
            }
        }
        Orders.setModel(model);
        }   
        
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Orders = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Orders.setModel(model
        );
        Orders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OrdersMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                OrdersMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Orders);

        jButton2.setText("Accept");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Decline");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Mark as Complete");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jButton3)
                        .addGap(45, 45, 45)
                        .addComponent(jButton2)
                        .addGap(32, 32, 32)
                        .addComponent(jButton4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 777, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(208, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jButton1)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        RunnerUI menu = new RunnerUI();
        menu.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void OrdersMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrdersMouseReleased
     // TODO add your handling code here:
    row = Orders.getSelectedRow();

    if (row != -1 && evt.getClickCount() == 2 && !evt.isConsumed()) {
        // Handle double-click event
        String id = String.valueOf(model.getValueAt(row, 0));
        String total = String.valueOf(model.getValueAt(row, 1));
        String date = String.valueOf(model.getValueAt(row, 2));
        String status = String.valueOf(model.getValueAt(row, 3));
        String FoodStatus = String.valueOf(model.getValueAt(row, 4));
        String Confirmation = String.valueOf(model.getValueAt(row, 5));

        OrderDetail detail = new OrderDetail();
        detail.OrderTable(id);
        detail.setVisible(true);
        evt.consume();
    }
    }//GEN-LAST:event_OrdersMouseReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String[] customOptions = { "Confirm", "Cancel" };
        
        int confirmation = JOptionPane.showOptionDialog(
    null,
    "Are you sure you want to complete this order?",
    "Confirmation",
    JOptionPane.YES_NO_OPTION,
    JOptionPane.QUESTION_MESSAGE,
    null, // Use default icon
    customOptions, // Use custom button labels
    customOptions[0] // Default selection
);
        if(confirmation==0){
            OrderFile order = (OrderFile) OrderList.get(row);
            if(order.getDelivery()==OrderFile.DeliveryStatus.DELIVERING && order.getDeliveryGuy().equals(RunnerLogin.currentRunner)){
                OrderFile.setDeliveryStatus(order.getOrderID(), OrderFile.DeliveryStatus.DELIVERED);
                order.setOrderStatus(order.getOrderID(), OrderFile.OrderStatus.PENDINGCOMFIRM);
                Message ms = new Message(order.getCustomerID(), "Your order "+order.getOrderID().replace(".txt", "") +" was completed, press confirm to complete the order", Message.messageType.FOODORDER, order.getOrderID());
                Message.addMessage(ms);
            }
            else{
                JOptionPane.showMessageDialog(null, "The order is not accepted yet!");
            }
        }
        OrderTable();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String[] customOptions = { "Confirm", "Cancel" };
        OrderFile order = (OrderFile) OrderList.get(row);
        if(order.getConfirm()!=OrderFile.confirmation.PENDING){
            JOptionPane.showMessageDialog(null,"The order has been confirmed");
        }
        else{
        
        int confirmation = JOptionPane.showOptionDialog(
    null,
    "Are you sure you want to reject this order?",
    "Confirmation",
    JOptionPane.YES_NO_OPTION,
    JOptionPane.QUESTION_MESSAGE,
    null, // Use default icon
    customOptions, // Use custom button labels
    customOptions[0] // Default selection
);
        if(confirmation==0){
            OrderFile.deductDeliveryGuyAvailable(order.getOrderID(), RunnerLogin.currentRunner);
        }
        OrderTable();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String[] customOptions = { "Confirm", "Cancel" };
        
        int confirmation = JOptionPane.showOptionDialog(
    null,
    "Are you sure you want to accept this order?",
    "Confirmation",
    JOptionPane.YES_NO_OPTION,
    JOptionPane.QUESTION_MESSAGE,
    null, // Use default icon
    customOptions, // Use custom button labels
    customOptions[0] // Default selection
);
        if(confirmation==0){
            OrderFile order = (OrderFile) OrderList.get(row);
            String OrderID = order.getOrderID();
            order.setDelivery(OrderFile.DeliveryStatus.ACCEPTED);
            order.setDeliveryGuy(OrderID, RunnerLogin.currentRunner);
            String message = "The order " + order.getOrderID() + " has been accepted by the vendor";
            Message mess = new Message(OrderID, message);
            Message.addMessage(mess);
            OrderTable();
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void OrdersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrdersMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_OrdersMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RunnerTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RunnerTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RunnerTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RunnerTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RunnerTask().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Orders;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
